-- made with ChatGPT 4-0, for testing purposes
-- somehow this is better than any other script for this game i've seen so far
-- Kavo UI Library setup
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Slap Battles Script by d3cryptt! (Chatgpt made 90%)", "Ocean")

-- Slap Aura Section
local SlapAuraTab = Window:NewTab("Slap Aura")
local SlapAuraSection = SlapAuraTab:NewSection("Slap Aura")
local SlapAuraSection = SlapAuraTab:NewSection("alt got banned, Add remotes yourself for more gloves")
-- Variables
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local slapDistance = 60
local slapCooldown = 0.6
local lastSlapTime = 0
local slapEnabled = false
local selectedRemote = "b" -- Default remote

-- Function to slap the closest player within the slap distance
local function slapClosestPlayer()
    if not slapEnabled then return end -- Only proceed if Slap Aura is enabled

    local closestPlayer = nil
    local closestDistance = slapDistance

    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local playerPosition = player.Character.HumanoidRootPart.Position

        for _, otherPlayer in pairs(Players:GetPlayers()) do
            if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local otherPlayerPosition = otherPlayer.Character.HumanoidRootPart.Position
                local distance = (playerPosition - otherPlayerPosition).Magnitude

                if distance <= closestDistance then
                    closestDistance = distance
                    closestPlayer = otherPlayer
                end
            end
        end

        if closestPlayer and tick() - lastSlapTime >= slapCooldown then
            lastSlapTime = tick() -- Update last slap time
            if closestPlayer.Character and closestPlayer.Character:FindFirstChild("Head") then
                local head = closestPlayer.Character.Head
                local args = {head}
                local remote = ReplicatedStorage:FindFirstChild(selectedRemote)
                if remote then
                    remote:FireServer(unpack(args))
                end
            end
        end
    end
end

-- Dropdown menu for glove selection
local gloveList = {
    {"Default", "Slap"},
    {"Dual", "GeneralHit"},
    {"Diamond", "DiamondHit"},
    {"ZZZZZZZ", "ZZZZZZZHit"},
    {"Extended", "b"},
    {"Brick", "BrickHit"},
    {"Snow", "SnowHit"},
    {"Pull", "PullHit"},
    {"Flash", "FlashHit"},
    {"Spring", "springhit"},
    {"Swapper", "HitSwapper"},
    {"Bull", "BullHit"},
    {"Dice", "DiceHit"},
    {"Ghost", "GhostHit"},
    {"Thanos", "ThanosHit"},
    {"Stun", "HtStun"},
    {"L.O.L.B.O.M.B", "GeneralHit"},
    {"Za Hando", "zhrmat"},
    {"Fort", "Fort"},
    {"Magnet", "MagnetHIT"},
    {"Pusher", "PusherHit"},
    {"Anchor", "hitAnchor"},
    {"Space", "HtSpace"},
    {"Boomerang", "BoomerangH"},
    {"Speedrun", "Speedrunhit"},
    {"Mail", "MailHit"},
    {"T H I C K", "GeneralHit"},
    {"Golden", "GoldenHit"},
    {"Squid", "GeneralHit"},
    {"MR", "MisterHit"},
    {"Hive", "GeneralHit"},
    {"Reaper", "GeneralHit"},
    {"Replica", "ReplicaHit"},
    {"Defense", "DefenseHit"},
    {"Killstreak", "KSHit"},
    {"Reverse", "ReverseHit"},
    {"Shukuchi", "ShukuchiHit"},
    {"Duelist", "DuelistHit"},
    {"Woah", "(woahHit)"},
    {"Ice (doesnt work, idk why)", "(IceHit)"},
    {"Gummy", "(GeneralHit)"},
    {"Adios", "(hitAdios)"},
    {"Blocked", "(NOT SUPPORTED)"},
    {"Divert", "(NOT SUPPORTED)"},
    {"Engineer", "(NOT SUPPORTED)"},
    {"Rocky", "(NOT SUPPORTED)"},
    {"Coil", "(NOT SUPPORTED)"},
    {"Conveyor", "(NOT SUPPORTED)"},
    {"Balloony", "(NOT SUPPORTED)"},
    {"Phantom", "(NOT SUPPORTED)"},
    {"El Gato", "(NOT SUPPORTED)"},
    {"Wormhole", "(NOT SUPPORTED)"},
    {"Stop", "(NOT SUPPORTED)"},
    {"Track", "(NOT SUPPORTED)"},
    {"Tableflip", "(NOT SUPPORTED)"},
    {"Shild", "(NOT SUPPORTED)"},
    {"Booster", "(NOT SUPPORTED)"},
    {"Ping Pong", "(NOT SUPPORTED)"},
    {"Baller", "(NOT SUPPORTED)"},
    {"Home Run", "(NOT SUPPORTED)"},
    {"Whirlwind", "(NOT SUPPORTED)"},
    {"Slicer", "(NOT SUPPORTED)"},
    {"Excavator", "(NOT SUPPORTED)"},
    {"Nightmare", "(NOT SUPPORTED)"},
    {"Thor", "(NOT SUPPORTED)"},
    {"Pocket", "(NOT SUPPORTED)"},
    {"Grapple", "(NOT SUPPORTED)"},
    {"Cloud", "(NOT SUPPORTED)"},
    {"Gravity", "(NOT SUPPORTED)"},
    {"Parry", "(NOT SUPPORTED)"},
    {"Jebaited", "(NOT SUPPORTED)"},
    {"Meteor", "(NOT SUPPORTED)"},
    {"Oven", "(NOT SUPPORTED)"},
    {"Guardian Angel", "(NOT SUPPORTED)"},
    {"Sun", "(NOT SUPPORTED)"},
    {"Ferryman", "(NOT SUPPORTED)"},
    {"Blackhole", "(NOT SUPPORTED)"},
    {"Blink", "(NOT SUPPORTED)"},
    {"Prop", "(NOT SUPPORTED)"},
    {"Slapstick", "(NOT SUPPORTED)"},
    {"Beatdown", "(NOT SUPPORTED)"},
    {"Chicken", "(NOT SUPPORTED)"},
    {"Bonk", "(NOT SUPPORTED)"},
    {"Sbeve", "(NOT SUPPORTED)"},
    {"Golem", "(NOT SUPPORTED)"},
    {"Grab", "(NOT SUPPORTED)"},
    {"Ufo", "(NOT SUPPORTED)"},
    {"God's Hand", "(NOT SUPPORTED)"},
    {"The Flex", "FlexHit"},
    {"CULT", "CULTHit"}
}

local gloveNames = {}
for _, glove in ipairs(gloveList) do
    table.insert(gloveNames, glove[1])
end

SlapAuraSection:NewDropdown("Select Glove", "Choose a glove to set the remote", gloveNames, function(selected)
    for _, glove in ipairs(gloveList) do
        if glove[1] == selected then
            selectedRemote = glove[2]
            break
        end
    end
end)

-- UI Elements for Slap Aura
SlapAuraSection:NewToggle("Enable Slap Aura", "Toggle the Slap Aura on/off", function(state)
    slapEnabled = state
end)

SlapAuraSection:NewSlider("Slap Distance", "Set the distance for the Slap Aura", 50, 1, slapDistance, function(value)
    slapDistance = value
end)

SlapAuraSection:NewButton("Tp to Arena, (god mode) (USE IN THE LOBBY!!)", "Makes you tp to the Arena", function()
        local player = game.Players.LocalPlayer.Character
local part = workspace.Arena["main island"].Grass 
player.HumanoidRootPart.CFrame = part.CFrame
    end)

-- Update handling using RunService
local RunService = game:GetService("RunService")

RunService.RenderStepped:Connect(function()
    if slapEnabled then
        slapClosestPlayer()
    end
end)

--Slapple stuff
local SlappleFarmTab = Window:NewTab("Slapple Farm")
local SlappleFarmSection = SlappleFarmTab:NewSection("farm slapples")


-- Slapple Farm Section

SlappleFarmSection:NewToggle("Enable Slapple Farm", "Toggle the Slapple Farm on/off", function(state)
    slappleFarmEnabled = state
end)


-- Function to fire TouchInterests for Slapples
local function farmSlapples()
    local slappleContainer = workspace:FindFirstChild("Arena") and workspace.Arena:FindFirstChild("island5") and workspace.Arena.island5:FindFirstChild("Slapples")
    if slappleContainer then
        for _, slapple in ipairs(slappleContainer:GetChildren()) do
            if slapple:IsA("Model") and slapple:FindFirstChild("Glove") then
                local glove = slapple.Glove
                if glove:FindFirstChild("TouchInterest") then
                    firetouchinterest(player.Character.HumanoidRootPart, glove, 0)
                    firetouchinterest(player.Character.HumanoidRootPart, glove, 1)
                end
            end
        end
    end
end

-- Function to update slap and slapple farm checks
local function onUpdate()
    if slapEnabled then
        slapClosestPlayer()
    end
    if slappleFarmEnabled then
        farmSlapples()
    end
end


-- Continuous check for actions
RunService.RenderStepped:Connect(onUpdate)

-- Anti Fall Tab and Toggle
local AntiFallTab = Window:NewTab("Anti Fall")
local AntiFallSection = AntiFallTab:NewSection("Anti Fall")

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- Variables
local player = Players.LocalPlayer
local teleportCFrame = CFrame.new(-6.73902416, -5.20054817, 1.95076489, -0.136649311, -0.00766478525, -0.990589857, -0.000125628911, 0.999970198, -0.00772003829, 0.99061954, -0.000930505106, -0.136646196)
local fallProtectionEnabled = false

-- Function to check if the player has fallen
local function checkFall()
    if fallProtectionEnabled and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local yPosition = player.Character.HumanoidRootPart.Position.Y
        if yPosition < -10 then -- Set the threshold Y value as needed
            player.Character:SetPrimaryPartCFrame(teleportCFrame)
        end
    end
end

AntiFallSection:NewToggle("Teleport Anti Fall", "Toggle the Anti Fall protection on/off", function(state)
    fallProtectionEnabled = state
end)

-- Continuous check for fall detection
RunService.Heartbeat:Connect(checkFall)

-- Variables
local originalCFrame = CFrame.new(-4.08799744, -8.92285156, 1.83599997) * CFrame.Angles(0, 0, math.rad(0.06))
local platformSize = Vector3.new(2000, 1, 2000) -- Flat, 1 stud high
local platform
local isPlatformVisible = false

-- Function to create the invisible part
local function createPlatform()
    if not platform then
        platform = Instance.new("Part")
        platform.Size = platformSize
        platform.CFrame = originalCFrame
        platform.Anchored = true
        platform.CanCollide = true
        platform.Transparency = 0.8 -- Invisible
        platform.Parent = workspace
    end
    platform.Parent = workspace
end

-- Function to remove the platform
local function removePlatform()
    if platform then
        platform.Parent = nil
    end
end

-- Toggle function for the button
local function togglePlatform()
    if isPlatformVisible then
        removePlatform()
    else
        createPlatform()
    end
    isPlatformVisible = not isPlatformVisible
end

-- Kavo UI Button Setup
AntiFallSection:NewToggle("Invisible Floor Anti Fall", "Toggle the invisible platform", function(state)
    togglePlatform()
end)



-- Other tabs and sections you have can go below here...

local PlayerTab = Window:NewTab("Player")
local PlayerSection = PlayerTab:NewSection("Player")
local PlayerSection = PlayerTab:NewSection("funny stuff that is funny")

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Connections storage
local HumanModCons = {}

-- Function to handle WalkSpeed change
local function WalkSpeedChange(speed)
    humanoid.WalkSpeed = speed
end

-- Function to handle JumpPower change
local function JumpPowerChange(power)
    humanoid.JumpPower = power
end

-- Slider for WalkSpeed
PlayerSection:NewSlider("Walk Speed", "Adjusts your walk speed", 150, 16, function(value)
    local speed = value
    if isnumber(speed) then
        WalkSpeedChange(speed)
        HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
            WalkSpeedChange(speed)
        end)
        HumanModCons.wsCA = (HumanModCons.wsCA and HumanModCons.wsCA:Disconnect() and false) or player.CharacterAdded:Connect(function(nChar)
            character, humanoid = nChar, nChar:WaitForChild("Humanoid")
            WalkSpeedChange(speed)
            HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
                WalkSpeedChange(speed)
            end)
        end)
    end
end)

-- Slider for JumpPower
PlayerSection:NewSlider("Jump Power", "Adjusts your jump power", 150, 50, function(value)
    local power = value
    if isnumber(power) then
        JumpPowerChange(power)
        HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
            JumpPowerChange(power)
        end)
        HumanModCons.jpCA = (HumanModCons.jpCA and HumanModCons.jpCA:Disconnect() and false) or player.CharacterAdded:Connect(function(nChar)
            character, humanoid = nChar, nChar:WaitForChild("Humanoid")
            JumpPowerChange(power)
            HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
                JumpPowerChange(power)
            end)
        end)
    end
end)

-- Cleanup function when the player leaves
Players.PlayerRemoving:Connect(function(removingPlayer)
    if removingPlayer == player then
        if HumanModCons.wsLoop then HumanModCons.wsLoop:Disconnect() end
        if HumanModCons.wsCA then HumanModCons.wsCA:Disconnect() end
        if HumanModCons.jpLoop then HumanModCons.jpLoop:Disconnect() end
        if HumanModCons.jpCA then HumanModCons.jpCA:Disconnect() end
    end
end)

-- Function to check if a value is a number
function isnumber(value)
    return type(value) == "number"
end


local extrashitTab = Window:NewTab("extra stuff")
local extrashitSection = extrashitTab:NewSection("some cool useful stuff")

extrashitSection:NewToggle("Auto Click Tycoon", "Automatically clicks the Tycoon button", function(Value)
    AutoTycoon = Value
    for i,v in pairs(workspace:GetDescendants()) do
        if v.Name == "End" and v.ClassName == "Part" then
            v.Size = Vector3.new(28, 0.3, 4)
        end
    end
    while AutoTycoon do
        for i,v in pairs(workspace:GetDescendants()) do
            if v.Name == "Click" and v:FindFirstChild("ClickDetector") then
                fireclickdetector(v.ClickDetector)
            end
        end
        task.wait()
    end
end)


extrashitSection:NewButton("Infinite Yield", "gives you admin commands", function()
 loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)


extrashitSection:NewButton("Remote Spy", "gives you a remote spyer", function()
 loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/SimpleSpyV3/main.lua"))()
end)

extrashitSection:NewButton("Dex Explorer", "gives you dex explorer", function()
 loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
end)

local BadgesTab = Window:NewTab("Badges")
local BadgesSection = BadgesTab:NewSection("Badges")

BadgesSection:NewButton("Get Elude", "Teleport to Elude Maze", function()
    local teleportFunc = queueonteleport or queue_on_teleport
    if teleportFunc then
        teleportFunc([[
            if not game:IsLoaded() then
                game.Loaded:Wait()
            end
            repeat wait() until game.Players.LocalPlayer
            game:GetService("RunService").RenderStepped:Connect(function()
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-502.336, 14.228, -179.597)
            end)
            game:GetService("TeleportService"):Teleport(6403373529)
        ]])
    end
    game:GetService("TeleportService"):Teleport(11828384869)
end)

BadgesSection:NewButton("Get Chain (1k slaps)", "Teleport and solve puzzle", function()
    if game.Players.LocalPlayer.leaderstats.Slaps.Value >= 1000 then
        local teleportFunc = queueonteleport or queue_on_teleport
        if teleportFunc then
            teleportFunc([[
                if not game:IsLoaded() then
                    game.Loaded:Wait()
                end
                repeat wait() until game.Players.LocalPlayer
                repeat wait() until game.Workspace:FindFirstChild("Map"):FindFirstChild("CodeBrick")
                if game.Workspace.Map.CodeBrick.SurfaceGui:FindFirstChild("IMGTemplate") then
                    game.Workspace.Map.CodeBrick.SurfaceGui.IMGTemplate.Name = "1st"
                    game.Workspace.Map.CodeBrick.SurfaceGui.IMGTemplate.Name = "2nd"
                    game.Workspace.Map.CodeBrick.SurfaceGui.IMGTemplate.Name = "3rd"
                    game.Workspace.Map.CodeBrick.SurfaceGui.IMGTemplate.Name = "4th"
                end
                -- Your logic for setting first, second, third, and fourth variables
                fireclickdetector(game.Workspace.Map.OriginOffice.Door.Keypad.Buttons.Reset.ClickDetector)
                wait(0.25)
                fireclickdetector(game.Workspace.Map.OriginOffice.Door.Keypad.Buttons[first].ClickDetector)
                wait(0.25)
                fireclickdetector(game.Workspace.Map.OriginOffice.Door.Keypad.Buttons[second].ClickDetector)
                wait(0.25)
                fireclickdetector(game.Workspace.Map.OriginOffice.Door.Keypad.Buttons[third].ClickDetector)
                wait(0.25)
                fireclickdetector(game.Workspace.Map.OriginOffice.Door.Keypad.Buttons[fourth].ClickDetector)
                wait(0.25)
                fireclickdetector(game.Workspace.Map.OriginOffice.Door.Keypad.Buttons.Enter.ClickDetector)
                game:GetService("TeleportService"):Teleport(6403373529)
            ]])
        end
        game:GetService("TeleportService"):Teleport(9431156611)
    end
end)

BadgesSection:NewButton("Get Tycoon (kinda sucks, fixing soon) ", "Automatically get the Tycoon badge", function()
    repeat task.wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Arena.Plate.CFrame * CFrame.new(0,2,0) * CFrame.Angles(math.rad(90), math.rad(0), math.rad(0))
    until game.Players.LocalPlayer.PlayerGui.PlateIndicator.TextLabel.Text == "Plate Counter: 600"
end)

BadgesSection:NewButton("Get [REDACTED] (5k slaps)", "Get the [REDACTED] badge", function()
    if game.Players.LocalPlayer.leaderstats.Slaps.Value >= 5000 then
        Door = 0
        for i = 1, 10 do
            Door = Door + 1
            if not game:GetService("BadgeService"):UserHasBadgeAsync(game.Players.LocalPlayer.UserId, 2124847850) then
                firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild("Head"), workspace.PocketDimension.Doors[Door], 0)
                firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild("Head"), workspace.PocketDimension.Doors[Door], 1)
                wait(3.75)
            end
        end
    else
        print ("you so stupid brah")
    end
end)

BadgesSection:NewToggle("Auto Collect Jet Orbs", "Auto-collect Jet Orbs", function(Value)
    Jetfarm = Value
    while Jetfarm do
        for _, v in pairs(game.Workspace:GetChildren()) do
            if v.Name == "JetOrb" and v:FindFirstChild("TouchInterest") then
                firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild("Head"), v, 0)
                firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild("Head"), v, 1)
            end
        end
        task.wait()
    end
end)

BadgesSection:NewToggle("Auto Collect Phase Orbs", "Auto-collect Phase Orbs", function(Value)
    Phasefarm = Value
    while Phasefarm do
        for _, v in pairs(game.Workspace:GetChildren()) do
            if v.Name == "PhaseOrb" and v:FindFirstChild("TouchInterest") then
                firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild("Head"), v, 0)
                firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild("Head"), v, 1)
            end
        end
        task.wait()
    end
end)

BadgesSection:NewButton("Get Brazil Badge", "Get the Brazil badge", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.workspace.Lobby.brazil.portal.CFrame
end)

BadgesSection:NewButton("Get court evidence Badge", "Get the court evidence badge", function()
    fireclickdetector(game.Workspace.Lobby.Scene.knofe.ClickDetector)
end)

BadgesSection:NewButton("Get duck Badge", "Get the duck badge", function()
    fireclickdetector(game.Workspace.Arena["default island"]["Rubber Ducky"].ClickDetector)
end)

BadgesSection:NewButton("Get The Lone Orange Badge", "Get The Lone Orange badge", function()
    fireclickdetector(game.Workspace.Arena.island5.Orange.ClickDetector)
end)
